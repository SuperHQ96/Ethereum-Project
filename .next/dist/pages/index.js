'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _semanticUiReact = require('semantic-ui-react');

var _factory = require('../ethereum/factory');

var _factory2 = _interopRequireDefault(_factory);

var _Layout = require('../components/Layout');

var _Layout2 = _interopRequireDefault(_Layout);

var _routes = require('../routes');

var _web = require('../ethereum/web3');

var _web2 = _interopRequireDefault(_web);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _jsxFileName = 'C:\\Users\\howar\\Desktop\\my-app\\pages\\index.js?entry';


var gameInstanceIndex = function (_Component) {
	(0, _inherits3.default)(gameInstanceIndex, _Component);

	function gameInstanceIndex() {
		var _ref,
		    _this2 = this;

		var _temp, _this, _ret;

		(0, _classCallCheck3.default)(this, gameInstanceIndex);

		for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
			args[_key] = arguments[_key];
		}

		return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = gameInstanceIndex.__proto__ || (0, _getPrototypeOf2.default)(gameInstanceIndex)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
			errorMessage: '',
			loading: false
		}, _this.onSubmit = function () {
			var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(event) {
				var accounts;
				return _regenerator2.default.wrap(function _callee$(_context) {
					while (1) {
						switch (_context.prev = _context.next) {
							case 0:
								event.preventDefault();

								_this.setState({ loading: true, errorMessage: '' });

								_context.prev = 2;
								_context.next = 5;
								return _web2.default.eth.getAccounts();

							case 5:
								accounts = _context.sent;
								_context.next = 8;
								return _factory2.default.methods.createGameInstance().send({
									from: accounts[0]
								});

							case 8:
								_routes.Router.replaceRoute('/');
								_context.next = 14;
								break;

							case 11:
								_context.prev = 11;
								_context.t0 = _context['catch'](2);

								_this.setState({ errorMessage: _context.t0.message });

							case 14:

								_this.setState({ loading: false });

							case 15:
							case 'end':
								return _context.stop();
						}
					}
				}, _callee, _this2, [[2, 11]]);
			}));

			return function (_x) {
				return _ref2.apply(this, arguments);
			};
		}(), _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	}

	(0, _createClass3.default)(gameInstanceIndex, [{
		key: 'renderGames',
		value: function renderGames() {
			var items = this.props.games.map(function (address) {
				return {
					header: address,
					description: _react2.default.createElement(_routes.Link, { route: '/games/' + address, __source: {
							fileName: _jsxFileName,
							lineNumber: 23
						}
					}, _react2.default.createElement('a', {
						__source: {
							fileName: _jsxFileName,
							lineNumber: 24
						}
					}, 'View Game')),
					fluid: true
				};
			});
			return _react2.default.createElement(_semanticUiReact.Card.Group, { items: items, __source: {
					fileName: _jsxFileName,
					lineNumber: 30
				}
			});
		}
	}, {
		key: 'render',
		value: function render() {
			return _react2.default.createElement(_Layout2.default, {
				__source: {
					fileName: _jsxFileName,
					lineNumber: 55
				}
			}, _react2.default.createElement(_semanticUiReact.Grid, {
				__source: {
					fileName: _jsxFileName,
					lineNumber: 56
				}
			}, _react2.default.createElement(_semanticUiReact.Grid.Row, {
				__source: {
					fileName: _jsxFileName,
					lineNumber: 57
				}
			}, _react2.default.createElement('h3', {
				__source: {
					fileName: _jsxFileName,
					lineNumber: 58
				}
			}, 'Games')), _react2.default.createElement(_semanticUiReact.Grid.Row, {
				__source: {
					fileName: _jsxFileName,
					lineNumber: 60
				}
			}, this.renderGames()), _react2.default.createElement(_semanticUiReact.Grid.Row, {
				__source: {
					fileName: _jsxFileName,
					lineNumber: 61
				}
			}, _react2.default.createElement(_semanticUiReact.Form, { onSubmit: this.onSubmit, error: !!this.state.errorMessage, __source: {
					fileName: _jsxFileName,
					lineNumber: 62
				}
			}, _react2.default.createElement(_semanticUiReact.Button, { loading: this.state.loading, primary: true, __source: {
					fileName: _jsxFileName,
					lineNumber: 63
				}
			}, 'Create New Game'), _react2.default.createElement(_semanticUiReact.Message, { error: true, header: 'Oops!', content: this.state.errorMessage, __source: {
					fileName: _jsxFileName,
					lineNumber: 66
				}
			})))));
		}
	}], [{
		key: 'getInitialProps',
		value: function () {
			var _ref3 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2() {
				var games;
				return _regenerator2.default.wrap(function _callee2$(_context2) {
					while (1) {
						switch (_context2.prev = _context2.next) {
							case 0:
								_context2.next = 2;
								return _factory2.default.methods.getDeployedGameInstances().call();

							case 2:
								games = _context2.sent;
								return _context2.abrupt('return', { games: games });

							case 4:
							case 'end':
								return _context2.stop();
						}
					}
				}, _callee2, this);
			}));

			function getInitialProps() {
				return _ref3.apply(this, arguments);
			}

			return getInitialProps;
		}()
	}]);

	return gameInstanceIndex;
}(_react.Component);

exports.default = gameInstanceIndex;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVua25vd24iXSwibmFtZXMiOlsiX2pzeEZpbGVOYW1lIiwiZ2FtZUluc3RhbmNlSW5kZXgiLCJfQ29tcG9uZW50IiwiX3JlZiIsIl90aGlzMiIsIl90ZW1wIiwiX3RoaXMiLCJfcmV0IiwiX2xlbiIsImFyZ3VtZW50cyIsImxlbmd0aCIsImFyZ3MiLCJBcnJheSIsIl9rZXkiLCJfX3Byb3RvX18iLCJjYWxsIiwiYXBwbHkiLCJjb25jYXQiLCJzdGF0ZSIsImVycm9yTWVzc2FnZSIsImxvYWRpbmciLCJvblN1Ym1pdCIsIl9yZWYyIiwibWFyayIsIl9jYWxsZWUiLCJldmVudCIsImFjY291bnRzIiwid3JhcCIsIl9jYWxsZWUkIiwiX2NvbnRleHQiLCJwcmV2IiwibmV4dCIsInByZXZlbnREZWZhdWx0Iiwic2V0U3RhdGUiLCJldGgiLCJnZXRBY2NvdW50cyIsInNlbnQiLCJtZXRob2RzIiwiY3JlYXRlR2FtZUluc3RhbmNlIiwic2VuZCIsImZyb20iLCJyZXBsYWNlUm91dGUiLCJ0MCIsIm1lc3NhZ2UiLCJzdG9wIiwiX3giLCJrZXkiLCJ2YWx1ZSIsInJlbmRlckdhbWVzIiwiaXRlbXMiLCJwcm9wcyIsImdhbWVzIiwibWFwIiwiYWRkcmVzcyIsImhlYWRlciIsImRlc2NyaXB0aW9uIiwiY3JlYXRlRWxlbWVudCIsInJvdXRlIiwiX19zb3VyY2UiLCJmaWxlTmFtZSIsImxpbmVOdW1iZXIiLCJmbHVpZCIsIkdyb3VwIiwicmVuZGVyIiwiUm93IiwiZXJyb3IiLCJwcmltYXJ5IiwiY29udGVudCIsIl9yZWYzIiwiX2NhbGxlZTIiLCJfY2FsbGVlMiQiLCJfY29udGV4dDIiLCJnZXREZXBsb3llZEdhbWVJbnN0YW5jZXMiLCJhYnJ1cHQiLCJnZXRJbml0aWFsUHJvcHMiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBRUE7Ozs7QUFDQTs7QUFDQTs7OztBQUNBOzs7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